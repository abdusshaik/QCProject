{
 "cells": [
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": 1,
   "source": [
    "# Construct the diffusion operator\n",
    "def diffusion_operator(N):\n",
    "    # Define uniform superposition state\n",
    "    s = np.ones((2**N, 1), dtype=complex) / np.sqrt(2**N)\n",
    "    # Compute |s><s|\n",
    "    ss_dagger = np.dot(s, s.T.conj())\n",
    "    # Construct identity matrix\n",
    "    identity = np.eye(2**N)\n",
    "    # Construct diffusion operator\n",
    "    diffusion = 2 * ss_dagger - identity\n",
    "    return diffusion"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "execution_count": null,
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.9.12"
  }
 }
}
